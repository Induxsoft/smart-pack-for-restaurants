#include "dkli.dkh"
#!
program
{
	#include "functions.dkh"
	#include "serialize.dkh"
	#include "dbr.dkh"
	#include "esc_pos.dkh"

	// path_log="/usr/devkron/web/sys-testbeta.induxsoft.net/log"

	ref data=@table_data
	
	ref db=@@(data,"&database")

	query_orden="select cc.sys_pk pkcc,cc.codigo cod_cc,cc.descripcion desc_cc,a.sys_pk pkwaiter,a.codigo cod_waiter,a.nombre,v.sys_pk pktable,
 v.dmnsmesa,v.descuento1 'descuento1',v.descuento2 'descuento2',v.dmnsnota 'dmnsnota',v.impuesto1 'impuesto1',v.impuesto2 'impuesto2',
				v.impuesto3 'impuesto3',v.impuesto4 'impuesto4',v.notas 'notas',v.importeadicional 'importeadicional',v.referencia 'referencia',v.subtotal 'subtotal',
				c.sys_pk pkcliente,c.codigo cod_cliente,c.nombre name_cliente,
				v.total 'total'
				from qventasserviciomesa v
				inner join cconsumo cc on v.icconsumo=cc.sys_pk
				inner join agente a on v.iagente=a.sys_pk
				inner join cliente c on v.icliente=c.sys_pk
				where v.sys_pk=@id_table limit 1;"

	query="select producto.codigo AS sku,producto.sys_pk,producto.ilinea as linea,dorden.sys_pk as pkdorden,dorden.fk_orden_detalle AS pkorden, dorden.sys_timestamp, 
                        dorden.cantidad,producto.descripcion,dorden.especificaciones,dorden.precio,dorden.d1,dorden.d2,dorden.tiemposervicio as tiempo, 
                        cfgimpuesto.i1venta,cfgimpuesto.i2venta,cfgimpuesto.i3venta,cfgimpuesto.i4venta,producto.unidad  from (dorden inner join (orden inner join 
                        venta on orden.iventa=venta.sys_pk) on dorden.fk_orden_detalle=orden.sys_pk) 
                        inner join (producto inner join cfgimpuesto on producto.impuestos=cfgimpuesto.sys_pk) on dorden.iproducto=producto.sys_pk where orden.iventa=@id_table"

    query_empresa="SELECT sys_pk,sys_guid,varvalue FROM globalvar g WHERE g.VarName='FXCA112';"
     if isnull(data){do rise_error(99,"Párametros imcompletos.")}
     if isnull(db){do rise_error(99,"Falta una conexión a la base de datos.")}
	
	new t{@"id_table":@@(data,"id_table")}
     
	ref data_orden=dbr.rec(db,query_orden,t)
	if isnull(data_orden){do rise_error(99,"No se encontraron datos de la orden")}

	ref data_empresa=dbr.rec(db,query_empresa,@null)

	do escpos.centeralign()
	do escpos.set.styles(128)
	do escpos.printline("           "+@@(data_empresa,"$varvalue")+"        ")
	do escpos.printline("============================================")
	do escpos.printline("Ticket: "+@@(data_orden,"$referencia")+"			 Date: "+date_str(now(),"yyyy-MM-dd"))
	do escpos.printline("")
	do escpos.printline("")
	do escpos.leftalign()
	do escpos.printline("CP: "+@@(data_orden,"$desc_cp"))
	do escpos.printline("Servicio a Mesa")
	do escpos.printline("Mesa: "+@@(data_orden,"$dmnsMesa"))
	do escpos.printline("Mesero: "+@@(data_orden,"$nombre"))
	do escpos.printline("Cliente: "+@@(data_orden,"$name_cliente"))
	do escpos.printline("============================================")
	do escpos.printline("		-DETALLE DE SU COMPRA-  	  ")
	do escpos.printline("============================================")
	do escpos.printline("DESCRIP  			CANT  		UNID  		IMPORTE")


	ref list_dorden=dbr.list(db,query,t)

	for i=0;i<@count(list_dorden)
 	{
 		ref itm=@item(list_dorden,i)
 		do escpos.printline(@@(itm,"$descripcion")+"		"+@@(itm,"$cantidad")+"		 "+@@(itm,"$unidad")+"		$"+format(@@(itm,"$precio"),"#,#.00"))
 	}

 	do escpos.printline("============================================")
	do escpos.rightalign()
	do escpos.printline("total: $ "+format(@@(data_orden,"$total"),"#,#.00"))
	do escpos.printline("Subtotal: $ "+format(@@(data_orden,"$subtotal"),"#,#.00"))


	do escpos.fullcut_afterfeed(50)

 	path_config=@@(data,"$printer")

 	if not(file.exists(path_config)){do rise_error(99,"No se encontro un archivo de configuración del cprod.")}

	ref cfg=from.json(file.rtext(path_config))

 	log=printer.print(cfg)

	do escpos.clear()

	do print(log)
 	exception
 	{
 		// plog=path.concat(path_log,uuid()+".txt")
 		// do file.wtext(plog,last_error())
 	}
}
